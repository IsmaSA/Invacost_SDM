# Background GBIF records:



install.packages("httr")
library(httr)
library(httr)
library(jsonlite)

api_url <- "https://io.biodiversite-quebec.ca/stac/collections/gbif_heatmaps/items"

response <- GET(api_url)

if (status_code(response) == 200) {
  data <- content(response, "text", encoding = "UTF-8")
  data_json <- fromJSON(data, flatten = FALSE)
  
  tiff_links <- lapply(data_json$features, function(item) item$links[[length(item$links)]]$href)
  
  # In fact, I fuck the code somewhere but I am not sure where, inspecting the data_json can dowload the file
  for (i in seq_along(tiff_links)) {
    cat("TIFF link", i, ":", tiff_links[[i]], "\n")
  }
download.file(tiff_links[7], "file.tif")




##Lets read now the file:

##Lets read now the file:
GBIF <- "C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost/Background_points/gbif_all_density_06-2022.tif"
GBIF <- "C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost/Background_points/gbif_amphibians_density_06-2022.tif"
GBIF <- "C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost/Background_points/gbif_arthropods_density_06-2022.tif"
GBIF <- "C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost/Background_points/gbif_mammals_density_06-2022.tif"
GBIF <- "C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost/Background_points/gbif_plants_density_06-2022.tif"
GBIF <- "C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost/Background_points/gbif_reptiles_density_06-2022.tif"

GBIF <- raster(GBIF)



GBIF <- projectRaster(GBIF, bio, method = "bilinear")#adjust the resolution of the GBIF layer
GBIF

grid_extent <- extent(-180, 179, -56, 84)

bioclim_variable <- bio[[3]]
water_mask <- bioclim_variable > 0  
bioclim_variable <- crop(bioclim_variable, grid_extent)

GBIF <- crop(GBIF, grid_extent)
GBIF <- mask(GBIF, bioclim_variable)

##
library(raster)
library(spatstat)
points <- rasterToPoints(GBIF)

coords <- cbind(points[,1], points[,2])

scale <- length(points[,3]) / sum(points[,3])
scaled_count  <- points[,3] * scale

coords <- cbind(points[,1], points[,2])

# Do a 2d kernel density estimation.
target_density <- kde(coords, w=scaled_count)

target_raster <- raster(target_density)

#crs(target_raster) <- '+init=EPSG:27700' --> Maybe later

# Clip data to the same resolution/extent.
target_raster <- resample(target_raster, bio, method='bilinear')
target_raster <- crop(target_raster, grid_extent)
target_raster <- target_raster - minValue(target_raster)
#target_raster <- raster.transformation(target_raster, trans="norm")

#plot(target_raster)
background_points <- randomPoints(mask = target_raster, n = 10050, prob = TRUE)
plot(background_points)
write_xlsx(background_points, "bg_all.xlsx")


#Option B ---------------



library(raster)
library(sp)


occurrence_counts <- as.vector(getValues(GBIF))

occurrence_counts[is.na(occurrence_counts)] <- 0

records <- data.frame(x = numeric(), y = numeric()) 
records <- read_xlsx("pseudoabsences.xlsx")

while (nrow(records) < 25000) {

  selected_cell <- sample(length(occurrence_counts), size = 1, prob = occurrence_counts)
  
  cell_coords <- xyFromCell(GBIF, selected_cell)

  records <- rbind(records, data.frame(x = cell_coords[1], y = cell_coords[2]))
  
  occurrence_counts[selected_cell] <- occurrence_counts[selected_cell] - 1
  
  occurrence_counts <- occurrence_counts[occurrence_counts > 0]
  cat(".")
}

#writexl::write_xlsx(records, "pseudoabsences1.xlsx") 9226
records<- read_excel("pseudoabsences1.xlsx", sheet = "Sheet2")
sp_points <- SpatialPoints(records)

plot(bio[["bio5"]])
plot(sp_points, add=T)

point <- extract(bio, sp_points) %>% as.data.frame() %>% mutate(ID= 1:24143 ) %>% drop_na()
point %>% filter(bio2 > 0 ) %>% nrow()

filtered_sp_points <- sp_points[!is.na(point), ]


a<-sp_points %>% as.data.frame() %>% mutate(ID= 1:length(sp_points))


b<- semi_join(a,point, by="ID")
writexl::write_xlsx(b, "pseudoabsences1.xlsx")





a <- rasterToPoints(GBIF)
c <- a[sample(nrow(a), 10000), ]


plot(c, ,add=T)
sp_points <- SpatialPoints(c)
point <- extract(bio, sp_points) %>% as.data.frame() %>% mutate(ID= 1:10000 ) %>% drop_na()
sp_points <- SpatialPoints(point)

