
# Note: In this code we will create the cost per km2

#Result from the previous code: 
setwd("C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost")

df <- read_xlsx("Interpolate_costs.xlsx")
df <- df[!duplicated(df[c("Species", "Country")]), ]
head(df)

spn <- unique(df$Species) # 160 + ...
n <- spn[1]

#This is a preliminary code remenber that the name of the countries MUST match
world <- st_read(dsn = "C:/Users/isma-/Downloads/World_Countries_Generalized.shp")
world <- world[,c(1,4,5)]

Cost_km2_total <- data.frame()
# Code for know the cost per sp
for (n in spn) {
  df1 <- df[df$Species == n, ]
  countries <- unique(df1$Country)
  
  raster_file <- paste0("prediction_", n, ".tif")
  raster_path <- file.path("C:/Users/isma-/OneDrive/Escritorio/SDM_Invacost/Background_points/Raster_model", raster_file)
  
  if (file.exists(raster_path)) {
    prediction_raster <- raster(raster_path)
    raster <- raster(extent(prediction_raster), res = 0.08333)
    
    for (country in countries) {
      species_country <- df1[df1$Country == country, ]
      
      world1 <- world %>% filter(COUNTRYAFF == country)
      
      if (nrow(world1) > 0) {
        world1$COUNTRYAFF <- as.factor(world1$COUNTRYAFF)
        world1 <- world1 %>%
          mutate(COUNTRYAFF_NUM = as.numeric(as.factor(COUNTRYAFF)))
        
        #I want to obtain the mean latitude: 
        mean_latitudes <- lapply(world1$geometry, function(polygon) {
          # Extract all coordinates for the polygon
          coords <- st_coordinates(polygon)
          
          # Extract the latitude values (second column of the coords matrix)
          latitudes <- coords[,2]
          
          # Calculate and return the mean latitude
          mean(latitudes)
        })
        
        # Convert the list to a vector and add it to the dataframe
        
        lat <- unlist(mean_latitudes)
        lat_rad <- lat * (pi/180)
        Area_cell <- 111.1 * 111.3 * cos(lat_rad)  
        
        
        
        rasterized <- rasterize(world1, raster, field = "COUNTRYAFF_NUM")
        
        country_values <- getValues(rasterized)
        
        prediction_raster$new_column <- country_values
        
        mask <- prediction_raster[[2]] == 1
        filtered_values <- prediction_raster[[1]][mask]
        
        if (length(filtered_values) > 0) {
          suitability <- filtered_values %>% as.data.frame()
          
          z <- b0 + b1 * sum(suitability$., na.rm=TRUE)
          A_prime_ci <- sum(suitability$., na.rm=TRUE) / (1 + exp(-z))
          
          
          # Conversion to kmÂ²
          #Area_cell <- 9.259 ^ 2  # Aproxx to my res 0.0833
          suitable_area_cell = as.numeric(A_prime_ci) * Area_cell
          
          Cost_km2 <- species_country$Cost_interpolated / suitable_area_cell
          
          Cost_per_km2 <- data.frame(Cost = Cost_km2)
          
          Cost_per_km2$country <- country
          Cost_per_km2$species <- n
          
          Cost_km2_total <- rbind(Cost_km2_total, Cost_per_km2)
        }
        cat("*")
      }
    }
}
}

Cost_km2_total %>% group_by(species) %>% summarise(Mean_cost_km2= mean(Cost)) #mean cost per species

Cost_km2_total %>% group_by(country) %>% summarise(Mean_cost_km2= mean(Cost)) #mean cost per country












